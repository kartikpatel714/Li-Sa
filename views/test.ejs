<!DOCTYPE html>
<!-- Coding By CodingNepal - www.codingnepalweb.com -->
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Title</title>
    <link rel="stylesheet" href="/css/home.css">
    <!-- Fontawesome Link for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
    <style>
     .button{
      display:flex;

     }
      .info form{
        margin-left: 0;
     }
     .info form input{
      width: 100%;
      height: 30px;
    }
    .info form .input{
      border: none;
      border-bottom: #000 1px solid;
      background-color: #F2F2F2;
      
     }
     .info form label{
      padding-right:25px ;
     }
.div{
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 25px;
}
/* Style for the label */
label {
  margin-bottom: 5px;
  font-weight: bold;
}

/* Style for the input field */
.input {
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
  transition: all 0.3s ease-in-out;
}

/* Style for the input when it has focus */
.input:focus {
  outline: none;
  border-color: dodgerblue;
  box-shadow: 0 0 5px dodgerblue;
}

/* Style for the label when the input is not empty */
.input:not(:placeholder-shown) + label {
  transform: translateY(-100%);
  font-size: 12px;
  color: #888;
}

/* Style for the input when it's not empty */
.input:not(:placeholder-shown) {
  border-color: green;
}
button {
  border: none;
  background-color: #000;
  color: #fff;
  font-size: 1.2rem;
  height: 50%;
  width: 50%;
  border-radius: 10px;
  transition: all 0.5s ease-in-out;
}
button:hover{
  background-color: #F2F2F2;
  color: #000;
}
#email-error {
  font-size: 12px;
  margin-top: 5px;
  display: block;
}
span{
  width: 50%;
}
#insruction{
  font-size: 1.2rem;
}
#photo{
  max-width: 100%; /* Ensure the container doesn't exceed its parent's width */
  position: relative; /* Establish a containing block for absolute positioning */

  /* Set a fixed aspect ratio (e.g., 16:9) */
  padding-top: 56.25%; /* This is 9 divided by 16 (9/16 * 100%) for a 16:9 aspect ratio */
  overflow: hidden; /* Hide overflowing content */
}
#photo:empty {
  display: none;
}
#photo img{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* Fill the container width */
  height: 100%; /* Fill the container height */
  object-fit: cover; /* Maintain aspect ratio and cover container */
}
    </style>
  </head>
  <body>
    <header>
      <nav class="navbar">
        <!-- <h2 class="logo"><a href="#"><img class="logos" src="/images/logo.png" alt=""></a></h2> -->
        <h2 class="logo"><a href="#">LOGO</a></h2>
        <input type="checkbox" id="menu-toggler">
        <label for="menu-toggler" id="hamburger-btn">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" width="24px" height="24px">
            <path d="M0 0h24v24H0z" fill="none"/>
            <path d="M3 18h18v-2H3v2zm0-5h18V11H3v2zm0-7v2h18V6H3z"/>
          </svg>
        </label>
        <ul class="all-links">
          <li><a href="#home">Home</a></li>
        </ul>
      </nav>
    </header>

    <section class="homepage">
      <div class="content">
        <div class="text">
          <h1>What is Melonoma Cancer?</h1>
          <p>
            Find easily and fast that <br> You are safe from Skin Cancer OR Not.</p> 
        </div>
        <div class="button">
          <a href="#info" >Information</a>
          <a href="#test">Test</a>
        </div>
      </div>
    </section>
    <section class="about" id="info">
     <h2> General Information About Melanoma</h2>
     <strong>KEY POINTS </strong>
<ul>
<li>Melanoma is a disease in which malignant (cancer) cells form in melanocytes (cells that color the skin).</li>
<li>There are different types of cancer that start in the skin.</li>
<li>Melanoma can occur anywhere on the skin.</li>
<li>Unusual moles, exposure to sunlight, and health history can affect the risk of melanoma.</li>
<li>Signs of melanoma include a change in the way a mole or pigmented area looks.</li>
<li>Tests that examine the skin are used to diagnose melanoma.</li>
<li>Certain factors affect prognosis (chance of recovery) and treatment options.</li>
</ul>
<br>
<br>
<br>
<h3>Melanoma is a disease in which malignant (cancer) cells form in melanocytes (cells that color the skin).</h3>
<img src="/images/Melonoma-view.jpg" alt="">
<h4>The skin is the body’s largest organ. It protects against heat, sunlight, injury, and infection. Skin also helps control body temperature and stores water, fat, and vitamin D. The skin has several layers, but the two main layers are the epidermis (upper or outer layer) and the dermis (lower or inner layer). Skin cancer begins in the epidermis, which is made up of three kinds of cells:
</h4>
<br>
<br>
<ul>
<li>Squamous cells: Thin, flat cells that form the top layer of the epidermis.</li>
<li>Basal cells: Round cells under the squamous cells.</li>
<li>Melanocytes: Cells that make melanin and are found in the lower part of the epidermis. Melanin is the pigment that gives skin its natural color. When skin is exposed to the sun or artificial light, melanocytes make more pigment and cause the skin to darken.
From 2010 to 2019, the number of new cases of melanoma increased by about 1% per year, though the number of deaths each year from melanoma continues to decrease. Melanoma is most common in adults, but it is sometimes found in children and adolescents. For more information, see Childhood Melanoma Treatment.</li>
</ul>
</section>
<section class="test" id="test">
  <div class="info">
  <form action="/test" method="POST" enctype="multipart/form-data" id="main-form">
		<div>
		<label for="name">Name</label>
		<input
			type="text"
			id="name"
			
			value=""
			name="name"
      class="input"
			required
		/>
		</div>
		<div>
			<label for="email">Email Id</label>
			<input 
			type="email"
			id="email"
			
      class="input"
      value=""
			name="email"
			required>
      <span id="email-error" style="color: red;"></span>
		</div>
		<div>
		<label for="desc"> Description</label>
		<input
			id="desc"
			name="desc"
			type="text" 
      class="input"
			required
		>
		</input>
		</div>
		<div>
		<label for="image" id="upload">Upload Image</label>
    <p id="instruction">Please Make Sure That Your Photo is Clear and well Captured.</p>
    <br>
    <br>
    <div id="photo">
    </div>
		<input type="file" id="image" name="image" value="" required />
		</div>
		<div class="div">
			<button type="submit">Submit</button>
		</div>
	</form>
    
  </div>
</section>
  
  


    <footer>
      <div>
        <span>Copyright © 2023 All Rights Reserved</span>
        <span class="link">
            <a href="#">Home</a>
        </span>
      </div>
    </footer>

    <script>
      const emailInput = document.getElementById('email');
      const emailError = document.getElementById('email-error');
      const mainForm = document.getElementById('main-form');
    
      emailInput.addEventListener('input', function () {
        const email = emailInput.value.trim();
    
        if (validateEmail(email)) {
          // Clear any previous error message
          emailError.textContent = '';
        } else {
          emailError.textContent = 'Invalid email address';
        }
      });
    
      function validateEmail(email) {
        // Regular expression for comprehensive email validation
        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9-]+\.[a-zA-Z]{2,}(?:\.[a-zA-Z]{2,})?(?!\.\w{2,})$/
        return emailRegex.test(email);
      }
    
      mainForm.addEventListener('submit', function (event) {
        const email = emailInput.value.trim();
    
        if (!validateEmail(email)) {
          // Prevent form submission if email is invalid
          event.preventDefault();
          emailError.textContent = 'Invalid email address';
          alert('Please Enter Valid Email Id.')
        }
      });
// Get references to the file input and photo container
const fileInput = document.getElementById('image');
const photoContainer = document.getElementById('photo');
const uploadinput = document.getElementById('upload');
const ins = document.getElementById('instruction');

// Initially hide the photo container
photoContainer.style.display = 'none';

// Add an event listener to the file input
fileInput.addEventListener('change', (event) => {
  const file = event.target.files[0]; // Get the selected file

  if (file) {
    // Create a FileReader to read the file
    const reader = new FileReader();

    // Define an event listener for when the FileReader finishes reading
    reader.onload = (e) => {
      // Create an image element to display the uploaded image
      const imageElement = document.createElement('img');
      imageElement.id = 'uploadedImage';
      imageElement.src = e.target.result;
      imageElement.classList.add('uploaded-image');

      // Append the image element to the photo container
      photoContainer.innerHTML = ''; // Clear existing content
      uploadinput.innerHTML = 'Your Uploaded Image';
      ins.textContent = "Thank you. You can see your photo below.";
      photoContainer.appendChild(imageElement);

      // Show the photo container
      photoContainer.style.display = 'block';
    };

    // Read the selected file as a data URL (for displaying as an image)
    reader.readAsDataURL(file);
  }
});

// Function to remove the displayed image
function removeUploadedImage() {
  photoContainer.innerHTML = ''; // Clear the content
  uploadinput.innerHTML = 'Upload Image';

  // Hide the photo container again when the image is removed
  photoContainer.style.display = 'none';
}

// Example: Add an event listener to a submit button to trigger image removal
const submitButton = document.getElementById('submit-button');
submitButton.addEventListener('click', () => {
  removeUploadedImage(); // Call the function to remove the displayed image
  // Perform form submission or other actions as needed
});
document.getElementById('image').addEventListener('change', function () {
  const fileInput = document.getElementById('image');
  const photoContainer = document.getElementById('photo');
  const uploadedImage = document.getElementById('uploadedImage');

  if (fileInput.files && fileInput.files[0]) {
      const reader = new FileReader();

      reader.onload = function (e) {
          const img = new Image();
          img.src = e.target.result;

          img.onload = function () {
              const canvas = document.createElement('canvas');
              const ctx = canvas.getContext('2d');

              // Calculate the new dimensions
              const maxWidth = 224;
              const maxHeight = 224;
              let newWidth = img.width;
              let newHeight = img.height;

              if (img.width > maxWidth || img.height > maxHeight) {
                  const aspectRatio = img.width / img.height;

                  if (aspectRatio > 1) {
                      newWidth = maxWidth;
                      newHeight = maxWidth / aspectRatio;
                  } else {
                      newWidth = maxHeight * aspectRatio;
                      newHeight = maxHeight;
                  }
              }

              canvas.width = newWidth;
              canvas.height = newHeight;

              // Draw the resized image on the canvas
              ctx.drawImage(img, 0, 0, newWidth, newHeight);

              // Set the canvas image as the source for the <img> element
              uploadedImage.src = canvas.toDataURL('image/jpeg'); // You can choose the format

              // Optionally, you can save the resized image or do further processing here
          };
      };

      reader.readAsDataURL(fileInput.files[0]);
  }
});


    </script>
    

  </body>
</html>